// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// IUserHandler is an autogenerated mock type for the IUserHandler type
type IUserHandler struct {
	mock.Mock
}

type IUserHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *IUserHandler) EXPECT() *IUserHandler_Expecter {
	return &IUserHandler_Expecter{mock: &_m.Mock}
}

// CreateUser provides a mock function with given fields: ctx
func (_m *IUserHandler) CreateUser(ctx *gin.Context) {
	_m.Called(ctx)
}

// IUserHandler_CreateUser_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateUser'
type IUserHandler_CreateUser_Call struct {
	*mock.Call
}

// CreateUser is a helper method to define mock.On call
//   - ctx *gin.Context
func (_e *IUserHandler_Expecter) CreateUser(ctx interface{}) *IUserHandler_CreateUser_Call {
	return &IUserHandler_CreateUser_Call{Call: _e.mock.On("CreateUser", ctx)}
}

func (_c *IUserHandler_CreateUser_Call) Run(run func(ctx *gin.Context)) *IUserHandler_CreateUser_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *IUserHandler_CreateUser_Call) Return() *IUserHandler_CreateUser_Call {
	_c.Call.Return()
	return _c
}

func (_c *IUserHandler_CreateUser_Call) RunAndReturn(run func(*gin.Context)) *IUserHandler_CreateUser_Call {
	_c.Call.Return(run)
	return _c
}

// NewIUserHandler creates a new instance of IUserHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIUserHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *IUserHandler {
	mock := &IUserHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
