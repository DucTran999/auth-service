openapi: "3.0.0"

info:
  version: 1.0.0
  title: Auth Service API
  description: |
    Authentication and user management service providing secure user registration, 
    authentication, and profile management capabilities.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.authservice.com
    description: Production server

security:
  - BearerAuth: []

paths:
  /livez:
    get:
      summary: Liveness probe endpoint
      description: |
        Kubernetes liveness probe endpoint. Checks if the service is running and healthy.
        If this endpoint fails, Kubernetes will restart the pod.
      tags:
        - Health
      operationId: checkLiveness
      security: [] # No auth required for health check
      responses:
        "200":
          description: Service is alive and healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
        "503":
          description: Service is not healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthErrorResponse"

  /api/v1/accounts:
    post:
      summary: Create a new account
      description: Register a new user account
      tags:
        - Accounts
      operationId: createAccount
      security: [] # Registration doesn't require auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountRequest"
      responses:
        "201":
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "409":
          $ref: "#/components/responses/Conflict"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication

  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
          example: healthy
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        version:
          type: string
          example: "v1.0.0"
        uptime:
          type: integer
          format: int64
          description: Service uptime in seconds
          example: 3600

    HealthErrorResponse:
      type: object
      required:
        - status
        - timestamp
        - error
      properties:
        status:
          type: string
          enum: [unhealthy, not_ready, error]
          example: unhealthy
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        error:
          type: string
          example: "Database connection failed"
        details:
          type: object
          additionalProperties: true

    CreateAccountRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: string
          example: "john.doe@example.com"
        password:
          type: string
          minLength: 8
          example: "SecurePass123!"

    Account:
      type: object
      required:
        - id
        - email
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        email:
          type: string
          format: string
          example: "john.doe@example.com"
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"

    ErrorResponse:
      type: object
      required:
        - version
        - errorCode
        - message
      properties:
        version:
          type: string
          example: "v1.0"
        errorCode:
          type: integer
          example: 1
        message:
          type: string
          example: "Error description"
        data:
          type: object
          nullable: true

    AccountResponse:
      type: object
      required:
        - version
        - errorCode
        - message
        - data
      properties:
        version:
          type: string
          example: "v1.0"
        errorCode:
          type: integer
          example: 0
        message:
          type: string
          example: "OK"
        data:
          $ref: "#/components/schemas/Account"

  responses:
    BadRequest:
      description: Bad request - invalid input
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            version: "v1.0"
            errorCode: 1
            message: "Invalid input parameters"
            data: null

    Unauthorized:
      description: Unauthorized - authentication required
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            version: "v1.0"
            errorCode: 1
            message: "Authentication required"
            data: null

    Conflict:
      description: Conflict - resource already exists
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            version: "v1.0"
            errorCode: 1
            message: "The resource already exists"
            data: null

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            version: "v1.0"
            errorCode: 1
            message: "Server Internal Error"
            data: null
